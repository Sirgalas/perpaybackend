plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
apply from: 'version.gradle'

group = 'ru.sergalas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
configurations {
	querydsl.extendsFrom annotationProcessor, implementation, compilyOnly, runtimeOnly //типы конфигураций на новые
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation "org.springdoc:springdoc-openapi-ui:${versions.springdoc}"
	implementation "org.springdoc:springdoc-openapi-security:${versions.springdoc}"
	implementation "com.google.code.gson:gson:${versions.gson}"
	implementation "io.jsonwebtoken:jjwt-api:${versions.jjwt}"
	implementation "org.json:json:${versions.json}"
	implementation "org.projectlombok:lombok-mapstruct-binding:${versions.lombokmapstruct}"
	implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
	implementation 'com.querydsl:querydsl-jpa'

	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct:1.4.2.Final"

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${versions.jjwtimpl}"
	runtimeOnly("io.jsonwebtoken:jjwt-orgjson:${versions.jjwtimpl}") {
		exclude group: 'org.json', module: 'json'
	}

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstructProcessor}"
	annotationProcessor 'com.querydsl:querydsl-apt'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

querydsl {
	jpa = true
	library = "com.querydsl:querydsl-apt:${versions.querydsl}"
	querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
	useJUnitPlatform()
}
